import javax.xml.parsers.DocumentBuilderFactory

plugins {
    id 'java-library'
    id 'jacoco'
    id 'com.github.dawnwords.jacoco.badge' version '0.2.4'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'org.jetbrains.kotlinx.kover' version "0.7.3"
}

group = 'com.anirudh'
version = '0.0.3-SNAPSHOT'

java {
    sourceCompatibility = '17'
}
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
}

jar {
    exclude('META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA')
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}


test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}

jacoco {
    toolVersion = "0.8.9"
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
    finalizedBy generateJacocoBadge
}

jacocoBadgeGenSetting {
    jacocoReportPath "$buildDir/reports/jacoco/test/jacocoTestReport.xml"
    readmePath "$projectDir/README.md"
    // since v0.2.0, percentage limitation (0-100) for different type of coverage
    limit = ['instruction': 0, 'branch': 0, 'line': 0, 'method': 0, 'class': 0]
}
